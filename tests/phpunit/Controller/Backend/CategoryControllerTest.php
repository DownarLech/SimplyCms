<?php
declare(strict_types=1);

namespace Test;

use App\Controllers\Backend\CategoryController;
use App\Services\Container;
use App\Services\DependencyProvider;
use App\Services\ViewService;
use PHPUnit\Framework\TestCase;
use Test\phpunit\Helper\ProductHelperTest;

class CategoryControllerTest extends TestCase
{
    private ProductHelperTest $productHelper;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->productHelper = new ProductHelperTest();
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->productHelper->deleteTemporaryProducts();
    }

    /**
     * @runInSeparateProcess
     */
    public function testAction()
    {
        $listOfProducts = $this->productHelper->createTemporaryProducts();

        $container = new Container();
        $containerProvider = new DependencyProvider();
        $containerProvider->providerDependency($container);

        $viewService = $container->get(ViewService::class);

        $category = new CategoryController($container);

        $category->action();
        //dump($viewService->getParams());

        $temp = $viewService->getParams();
        self::assertArrayHasKey('productList', $temp);

        $one = $temp['productList'][2];
        self::assertSame(2, $one->getId());
        self::assertSame('mark', $one->getName());
        self::assertSame('lorem mark', $one->getDescription());
    }
}
