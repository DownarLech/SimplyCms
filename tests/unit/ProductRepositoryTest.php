<?php

use App\Models\Dto\ProductDataTransferObject;
use App\Models\ProductRepository;

class ProductRepositoryTest extends \Codeception\Test\Unit
{
    /**
     * @var \UnitTester
     */
    protected $tester;
    /**
     * @var ProductRepository
     */
    private ProductRepository $productRepository;

    public function _before()
    {
        $this->productRepository = new  ProductRepository();
        parent::_before(); // TODO: Change the autogenerated stub
    }

    public function testGetProductList(): void
    {
        $productDataTransferList = $this->productRepository->getProductList();

        self::assertCount(4, $productDataTransferList);

        self::assertSame(3,$this->productRepository->getProduct(3)->getId());

        self::assertSame('Game', $this->productRepository->getProduct(2)->getName());

        self::assertSame('Coffee is love, coffee is life.',
            $this->productRepository->getProduct(4)->getDescription());
    }

    public function testGetProduct(): void
    {
        $productSingle = $this->productRepository->getProduct(3);

        self::assertInstanceOf(ProductDataTransferObject::class, $productSingle);
        self::assertSame(3, $productSingle->getId());
        self::assertSame('Cake', $productSingle->getName());
        self::assertSame('The cake is a lie.', $productSingle->getDescription());

    }

    public function testGetProductWhenProductIdNotFind (): void
    {
        self::assertNull($this->productRepository->getProduct(0));
    }


}