<?php

use App\Controllers\Backend\ProductController;
use App\Services\ViewService;
use App\Models\Dto\ProductDataTransferObject;

class ProductControllerTest extends \Codeception\Test\Unit
{
    /**
     * @var \UnitTester
     */
    protected $tester;


    protected function _after()
    {
        $_GET = [];
        parent::_after(); // TODO: Change the autogenerated stub
    }


    public function testSomeFeature()
    {
        $viewService = new ViewService();
        $product = new ProductController($viewService);
        $_GET['id'] = 1;
        $product->action();

        $temp = $viewService->getParams();
        self::assertArrayHasKey('product', $temp);

        $one = $temp['product'];
        self::assertSame(1, $one->getId());
        self::assertSame('Shirt', $one->getName());
        //self::assertContains('id',$one);
    }

    public function testError()
    {
        $viewService = new ViewService();
        $product = new ProductController($viewService);
        $_GET['id'] = 0;
        $product->action();

        self::assertStringEndsWith('error.tpl', $viewService->getTemplate());
        //$this->expectException(Exception::class);
    }


    /*
    public function testException() {

        $viewService = new ViewService();

        $product = new ProductController($viewService);
        $product->action();
        self::assertSame('error.tpl', $viewService->getTemplate());
        dump($viewService->getTemplate());

    }
    */


}